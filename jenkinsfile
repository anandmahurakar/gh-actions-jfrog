pipeline {
    agent any
    tools {
        maven 'maven3.8.5'
     
    }
    environment {
    password=credentials('jfrog-pwd')
    }
    
    
    stages {
    
        stage('Cleanup Workspace'){
            steps {
               println "${env.BRANCH_NAME}"
               cleanWs()
               //clean up temp directory
               dir("${env.WORKSPACE}@tmp") {
                     deleteDir()
               }
               //clean up script directory
               dir("${env.WORKSPACE}@script") {
                     deleteDir()
               }
               dir("${env.WORKSPACE}@script@tmp") {
                     deleteDir()
               }
               step([$class: 'WsCleanup']) 
               }
               }
               
             stage('checkout code'){
            steps {
               
               //checkout([$class: 'GitSCM', branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[credentialsId: 'githubjfrog', url: 'https://github.com/cloudzenix-anand/github-actions-Multi-Jobs.git']]])
              checkout([$class: 'GitSCM', branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[credentialsId: 'gh-token', url: 'https://github.com/ckrorg/gh-actions-jfrog.git']]])
               }
               }
               
              
         stage('Buildpackage'){
            steps {
                sh "mvn clean package"
                sh "cp /var/lib/jenkins/workspace/pipeline-jfrog-sonar/target/springboot-welcome.jar /var/lib/jenkins/workspace/pipeline-jfrog-sonar"
                sh "jf rt upload 'springboot-welcome.jar' sandbox-maven-local --url=https://mskcc.jfrog.io/artifactory/ --user=korvic@mskcc.org --password=${password}"
            }    
         }
         
                  
         stage('Build and push image'){
           steps{
               sh "docker build -t mskcc.jfrog.io/sandbox-docker1-local/springboot-welcome:${env.BUILD_NUMBER} ."
               sh "docker login -u korvic@mskcc.org -p ${password} mskcc.jfrog.io"
               sh "docker push mskcc.jfrog.io/sandbox-docker1-local/springboot-welcome:${env.BUILD_NUMBER}"
               }
             }  
         
        stage('Xray'){
            steps{
                script {
                    rtServer = Artifactory.newServer url: 'https://mskcc.jfrog.io/', username: 'korvic@mskccc.org' , password:${password}
                    buildInfo = Artifactory.newBuildInfo()
                }
            }
        }


        stage('Configure Xray '){
            steps{
                rtBuildInfo (
                    buildName: "jenkins-jfrog-sonar",
                    buildNumber: buildInfo.number,
                    maxBuilds: 1,
                    maxDays: 2,
                    doNotDiscardBuilds: ["3"],
                    deleteBuildArtifacts: true
                )
            }
        }

        stage('Publish'){
            steps {
                rtPublishBuildInfo (
                    serverId : 'Jfrog',
                    buildName : "jenkins-jfrog-sonar",
                    buildNumber : buildInfo.number
                )
            }
        }

        //Scan Build Artifacts in Xray
        stage('Xray Scan') {
            steps{
                script{
                   xrayScan (
                        serverId :   "Jfrog",
                        buildName    : "jenkins-jfrog-sonar",
                        buildNumber : buildInfo.number,
                        failBuild    : true
                    )
                }
            }
        }
    }
}
